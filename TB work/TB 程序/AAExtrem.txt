Params
	//Numeric nPeriodBreak(30); 
	//Numeric nATR1(2); 
	//Numeric nATR2(2); 
	Numeric p1(0.4);
	Numeric p2(0.2);
	

vars 
	NumericSeries myEntryPrice(0);
	NumericSeries EntryBar(0);
	NumericSeries HighestCloseFromEntry(0);
	NumericSeries LowestCloseFromEntry(0);
	NumericSeries EntryATR;
	NumericSeries atr;
	NumericSeries EntryFlag(0);
	NumericSeries ExitFlag(0);
	
	Numeric i;
	Numeric MaxDifference(0);
	Numeric Difference(0);

	Bool EntryCondition1(False);
	Bool EntryCondition2(False);
	Bool ExitCondition(False);
	
	NumericSeries AvgValue;

	
Begin

	//atr = AvgTrueRange(60); 
	
	
//----------------------------- 平仓 --------------------------------
	If (ExitFlag == 10)
	{
		Sell(1,Open); 	
		ExitFlag = 0;
	}

	If (ExitFlag == 20)
	{
		BuyToCover(1,Open); 
		ExitFlag = 0;
	}

	//----------------------------- 开仓 --------------------------------

	If (EntryFlag == 10)
	{
		// 如有空仓 buy函数先平空仓再开多。
		Buy(1,Open);                                 
		myEntryPrice = Open;                                               
		EntryATR = atr;                                                    
		EntryBar = CurrentBar;                                             
		HighestCloseFromEntry = Open;  
		EntryFlag = 0;		
	}
	
	If (EntryFlag == 20)
	{
	    // 如有多仓 SellShort函数先平多仓再开空。
		SellShort(1,Open);  
		myEntryPrice = Open;
		EntryATR = atr;
		EntryBar = CurrentBar;
		LowestCloseFromEntry = Open;
		EntryFlag = 0;	
	}
	
	
	//----------------------------- 平仓提示 --------------------------------
	if (MarketPosition==1)
	{
		if (Close>HighestCloseFromEntry)
		{	HighestCloseFromEntry = Close; }
		
		
		/*ExitCondition = (myEntryPrice-Close >= nATR1*EntryATR) 
		               || (HighestCloseFromEntry-Close >= nATR1*atr );*/
		ExitCondition = (myEntryPrice-Close >= myEntryPrice*p2) 
		               || (HighestCloseFromEntry-Close >= HighestCloseFromEntry*p2 );
					   
		If (ExitCondition)
		{
			PlotString("is2","平多");
			Commentary("平多");
			ExitFlag = 10;
			if (CurrentDate() == Date())
			{ 
				FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
										Text(Date())+"  "+SymbolName()+" ：平多");
			}
		} 
		
	}  
	else If(MarketPosition==-1)
	{
		if (Close<LowestCloseFromEntry)
		{	LowestCloseFromEntry = Close; }
		
		/*ExitCondition = (Close-myEntryPrice >= nATR1*EntryATR)  
		                || (Close-LowestCloseFromEntry >= nATR1*atr ); */
		
		ExitCondition = (Close-myEntryPrice >= myEntryPrice*p2)  
		                || (Close-LowestCloseFromEntry >= LowestCloseFromEntry*p2 ); 
						
		If (ExitCondition)
		{
			PlotString("is3","平空");
			Commentary("平空");
			ExitFlag = 20; 
			if (CurrentDate() == Date())
			{ 
				FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
										Text(Date())+"  "+SymbolName()+" ：平空");
			}
		}

	}
	//-----------------------------------------------------------------------
	
	
	//----------------------------- 开仓提示 --------------------------------
	//EntryCondition1 = (Highest(Close,nPeriodBreak)==Close); 
	//EntryCondition2 = (Lowest(Close,nPeriodBreak)==Close);
	
	
	
	If (Close[1]-Close>0)
	{
		Difference = 0;
		MaxDifference = 0;
		For  i =  1 To  CurrentBar
		{	
			Difference = Close[i]-Close;
			
			If (Difference<0)
			{
				break; 
			}
			Else
			{
				If (Difference>MaxDifference)
				{ MaxDifference =  Difference; }
			}
		}
		
		If (MaxDifference > Close*p1)
		{ EntryCondition2 = True; }

	}

	If (Close[1]-Close<0)
	{
		Difference = 0;
		MaxDifference = 0;

		For  i =  1 To  CurrentBar
		{	
			Difference = Close[i]-Close;
			
			If (Difference>0)
			{
				break; 
			}
			Else
			{
				If (Difference<MaxDifference)
				{ MaxDifference =  Difference; }
			}
		}
		
		If (Abs(MaxDifference) > Close*p1)
		{ EntryCondition1 = True; }

	}
	
	
/*	// 平仓条件 优先于 开仓条件
	AvgValue = AverageFC(Close,120);
	if (MarketPosition == 0 || ExitFlag == 10  || ExitFlag == 20)
	{
		If ((EntryCondition1==True)&&(Close > AvgValue))
		{
			PlotString("is1","开多"); 
			Commentary("开多");
			EntryFlag = 10;
			if (CurrentDate() == Date())
			{ 
				FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
										Text(Date())+"  "+SymbolName()+" ：开多");
			}
		}
		else If((EntryCondition2)&&(Close < AvgValue))
		{	
			PlotString("is1","开空");  
			Commentary("开空");
			EntryFlag = 20;
			
			if (CurrentDate() == Date())
			{ 
				FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
										Text(Date())+"  "+SymbolName()+" ：开空");
			}
		}
	}*/
 

	
	
	// 开仓条件 优先于 平仓条件
	If ((EntryCondition1==True)&&(MarketPosition() != 1))
	{

		If (MarketPosition() == -1)
		{
			PlotString("is3","平空");
			Commentary("平空");
			ExitFlag = 20; 
			if (CurrentDate() == Date())
			{ 
				FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
										Text(Date())+"  "+SymbolName()+" ：平空");
			} 
		}
	
		PlotString("is1","开多"); 
		Commentary("开多");
		EntryFlag = 10;
		if (CurrentDate() == Date())
		{ 
			FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
									Text(Date())+"  "+SymbolName()+" ：开多");
		}
	}
	else If((EntryCondition2)&&(MarketPosition() != -1))
	{
		If (MarketPosition() == 1)
		{ 
			PlotString("is2","平多");
			Commentary("平多");
			ExitFlag = 10;
			if (CurrentDate() == Date())
			{ 
				FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
										Text(Date())+"  "+SymbolName()+" ：平多");
			}
		}
	
		PlotString("is1","开空");  
		Commentary("开空");
		EntryFlag = 20;
		
		if (CurrentDate() == Date())
		{ 
			FileAppend("C:\\D\\future\\交易"+Text(CurrentDate())+".txt",
									Text(Date())+"  "+SymbolName()+" ：开空");
		}
	}
	   
	
	 
end 






































