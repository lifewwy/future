
ans =

C:\D\xyz\future\m\跟踪开仓-记录资金-图像识别-4\DIARY\diary_20180823T004446.txt

<a href="matlab: opentoline('C:\D\xyz\future\m\跟踪开仓-记录资金-图像识别-4\跟踪开仓\panel.m',3084,1)">3084 </a>1;
handles.abPos

ans = 

    'AL1810'    '多'    []    []    []    []
    'AU1812'    '空'    []    []    []    []
    'CF1901'    '空'    []    []    []    []
    'CU1810'    '空'    []    []    []    []
    'IF1809'    '空'    []    []    []    []
    'J1901'     '多'    []    []    []    []
    'L1901'     '多'    []    []    []    []
    'M1901'     '多'    []    []    []    []
    'MA1901'    '多'    []    []    []    []
    'P1901'     '多'    []    []    []    []
    'RB1901'    '多'    []    []    []    []
    'RU1901'    '多'    []    []    []    []
    'SR1901'    '空'    []    []    []    []
    'TA1901'    '多'    []    []    []    []
    'Y1901'     '多'    []    []    []    []
    'ZN1810'    '空'    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []
          []     []    []    []    []    []

if system_dependent('IsDebugMode')==1, dbquit; end
d = import('TB持仓情况20180823.csv')
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('import')" style="font-weight:bold">import</a>
Import argument 'TB持仓情况20180823.csv' cannot be found or cannot be imported.
} 
d = importdata('TB持仓情况20180823.csv')

d = 

          data: [8x2 double]
      textdata: {8x1 cell}
    rowheaders: {8x1 cell}

d

d = 

          data: [8x2 double]
      textdata: {8x1 cell}
    rowheaders: {8x1 cell}

d.data

ans =

    20180822           0
    20180822           1
    20180822          -1
    20180822          -1
    20180822           1
    20180822           1
    20180822           1
    20180822           1

d.textdata

ans = 

    'AL1810'
    'RB1901'
    'RU1901'
    'SR1901'
    'TA1901'
    'V1901'
    'Y1901'
    'ZN1810'

<a href="matlab: opentoline('C:\D\xyz\future\m\跟踪开仓-记录资金-图像识别-4\跟踪开仓\panel.m',3066,1)">3066 </a>fn2 = [directory,'strategyPosLen.mat'];
fp(1:pp(end-3))

ans =

C:\D\xyz\future\

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\'];
dir

.                   ..                  TB持仓情况20180823.csv  

dir(directory2)

.                   ..                  TB持仓情况20180823.csv  

x = dir(directory2)

x = 

3x1 <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> array with fields:

    name
    date
    bytes
    isdir
    datenum

x(1)

ans = 

       name: '.'
       date: '23-八月-2018 00:57:04'
      bytes: 0
      isdir: 1
    datenum: 7.3730e+05

x(2)

ans = 

       name: '..'
       date: '23-八月-2018 00:57:04'
      bytes: 0
      isdir: 1
    datenum: 7.3730e+05

x(3)

ans = 

       name: 'TB持仓情况20180823.csv'
       date: '23-八月-2018 00:57:04'
      bytes: 152
      isdir: 0
    datenum: 7.3730e+05

x(1)

ans = 

       name: '.'
       date: '23-八月-2018 00:57:04'
      bytes: 0
      isdir: 1
    datenum: 7.3730e+05

x(2)

ans = 

       name: '..'
       date: '23-八月-2018 00:57:04'
      bytes: 0
      isdir: 1
    datenum: 7.3730e+05

help dir
 <strong>dir</strong> List directory.
    <strong>dir</strong> directory_name lists the files in a directory. Pathnames and
    wildcards may be used.  For example, <strong>dir</strong> *.m lists all program files
    in the current directory.
 
    D = <strong>dir</strong>('directory_name') returns the results in an M-by-1
    structure with the fields: 
        name    -- Filename
        date    -- Modification date
        bytes   -- Number of bytes allocated to the file
        isdir   -- 1 if name is a directory and 0 if not
        datenum -- Modification date as a MATLAB serial date number.
                   This value is locale-dependent.
 
    See also <a href="matlab:help what">what</a>, <a href="matlab:help cd">cd</a>, <a href="matlab:help type">type</a>, <a href="matlab:help delete">delete</a>, <a href="matlab:help ls">ls</a>, <a href="matlab:help rmdir">rmdir</a>, <a href="matlab:help mkdir">mkdir</a>, <a href="matlab:help datenum">datenum</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('dir')">Other functions named dir</a>

    Reference page in Help browser
       <a href="matlab:doc dir">doc dir</a>

{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('fullfile', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\iofun\fullfile.p', 51)" style="font-weight:bold">fullfile</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\iofun\fullfile.p',51,0)">line 51</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('helpUtils.helpProcess/getDemoTopic', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\helptools\+helpUtils\@helpProcess\getDemoTopic.m', 4)" style="font-weight:bold">helpUtils.helpProcess/getDemoTopic</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\helptools\+helpUtils\@helpProcess\getDemoTopic.m',4,0)">line 4</a>)
    if ~isempty(dir(fullfile(path, 'html', [name '.html'])))

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('helpUtils.helpProcess/prepareHelpForDisplay', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\helptools\+helpUtils\@helpProcess\prepareHelpForDisplay.m', 14)" style="font-weight:bold">helpUtils.helpProcess/prepareHelpForDisplay</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\helptools\+helpUtils\@helpProcess\prepareHelpForDisplay.m',14,0)">line 14</a>)
            demoTopic = hp.getDemoTopic;

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('help', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\helptools\help.m', 56)" style="font-weight:bold">help</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\helptools\help.m',56,0)">line 56</a>)
        process.prepareHelpForDisplay;
} 
directory2 = [directory2,'TB持仓\TBTB持仓*.csv']

directory2 =

C:\D\xyz\future\TB持仓\TB持仓\TBTB持仓*.csv

x = dir(directory2)

x = 

0x1 <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> array with fields:

    name
    date
    bytes
    isdir
    datenum

help dir
 <strong>dir</strong> List directory.
    <strong>dir</strong> directory_name lists the files in a directory. Pathnames and
    wildcards may be used.  For example, <strong>dir</strong> *.m lists all program files
    in the current directory.
 
    D = <strong>dir</strong>('directory_name') returns the results in an M-by-1
    structure with the fields: 
        name    -- Filename
        date    -- Modification date
        bytes   -- Number of bytes allocated to the file
        isdir   -- 1 if name is a directory and 0 if not
        datenum -- Modification date as a MATLAB serial date number.
                   This value is locale-dependent.
 
    See also <a href="matlab:help what">what</a>, <a href="matlab:help cd">cd</a>, <a href="matlab:help type">type</a>, <a href="matlab:help delete">delete</a>, <a href="matlab:help ls">ls</a>, <a href="matlab:help rmdir">rmdir</a>, <a href="matlab:help mkdir">mkdir</a>, <a href="matlab:help datenum">datenum</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('dir')">Other functions named dir</a>

    Reference page in Help browser
       <a href="matlab:doc dir">doc dir</a>

directory2 = [directory2,'TB持仓\*.csv']

directory2 =

C:\D\xyz\future\TB持仓\TB持仓\TBTB持仓*.csvTB持仓\*.csv

directory2 = fp(1:pp(end-3))

directory2 =

C:\D\xyz\future\

directory2 = [directory2,'TB持仓\*.csv']

directory2 =

C:\D\xyz\future\TB持仓\*.csv

dir(directory2)

TB持仓情况20180823.csv  

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv']

directory2 =

C:\D\xyz\future\TB持仓\TB持仓情况*.csv

dir(directory2)

TB持仓情况20180823.csv  

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
filename = dir(directory2);
d = importdata(filename);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('importdata', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\iofun\importdata.p', 136)" style="font-weight:bold">importdata</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\iofun\importdata.p',136,0)">line 136</a>)
Unable to open file.
} 
filename

filename = 

       name: 'TB持仓情况20180823.csv'
       date: '23-八月-2018 00:57:04'
      bytes: 152
      isdir: 0
    datenum: 7.3730e+05

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
% filename = dir(directory2);
d = importdata(dir(directory2));
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('importdata', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\iofun\importdata.p', 136)" style="font-weight:bold">importdata</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\iofun\importdata.p',136,0)">line 136</a>)
Unable to open file.
} 
dir(directory2)

TB持仓情况20180823.csv  

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
% filename = dir(directory2);
d = importdata(dir(directory2).name);
{Error: Functions cannot be indexed using {} or . indexing.
} 
dir(directory2).name
{Error: Functions cannot be indexed using {} or . indexing.
} 
directory2

directory2 =

C:\D\xyz\future\TB持仓\TB持仓情况*.csv

dir(directory2)

TB持仓情况20180823.csv  

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
fileStruct

fileStruct = 

       name: 'TB持仓情况20180823.csv'
       date: '23-八月-2018 00:57:04'
      bytes: 152
      isdir: 0
    datenum: 7.3730e+05

fileStruct.name

ans =

TB持仓情况20180823.csv

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
d = importdata(fileStruct.name);
d

d = 

          data: [8x2 double]
      textdata: {8x1 cell}
    rowheaders: {8x1 cell}

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
d = importdata(fileStruct.name);
d

d = 

          data: [8x2 double]
      textdata: {8x1 cell}
    rowheaders: {8x1 cell}

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
dstrcut.data

ans =

    20180822           0
    20180822           1
    20180822          -1
    20180822          -1
    20180822           1
    20180822           1
    20180822           1
    20180822           1

cellmat(ans)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('cell')" style="font-weight:bold">cell</a>
Size inputs must be scalar.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('cellmat', 'C:\Program Files\MATLAB\R2015a\toolbox\nnet\nnet\nndatafun\cellmat.m', 31)" style="font-weight:bold">cellmat</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\nnet\nnet\nndatafun\cellmat.m',31,0)">line 31</a>)
cm = cell(rows1,cols1);
} 
mat2cell(ans)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mat2cell', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\datatypes\mat2cell.m', 45)" style="font-weight:bold">mat2cell</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\datatypes\mat2cell.m',45,0)">line 45</a>)
Not enough input arguments.
} 
directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
dstrcut.data

ans =

    20180822           0
    20180822           1
    20180822          -1
    20180822          -1
    20180822           1
    20180822           1
    20180822           1
    20180822           1

mat2cell(dstrcut.data)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mat2cell', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\datatypes\mat2cell.m', 45)" style="font-weight:bold">mat2cell</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\datatypes\mat2cell.m',45,0)">line 45</a>)
Not enough input arguments.
} 
x = dstrcut.data

x =

    20180822           0
    20180822           1
    20180822          -1
    20180822          -1
    20180822           1
    20180822           1
    20180822           1
    20180822           1

{x}

ans = 

    [8x2 double]

mat2cell(x)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mat2cell', 'C:\Program Files\MATLAB\R2015a\toolbox\matlab\datatypes\mat2cell.m', 45)" style="font-weight:bold">mat2cell</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2015a\toolbox\matlab\datatypes\mat2cell.m',45,0)">line 45</a>)
Not enough input arguments.
} 
directory1 = fp(1:pp(end));
directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
dstrcut.data

ans =

    20180822           0
    20180822           1
    20180822          -1
    20180822          -1
    20180822           1
    20180822           1
    20180822           1
    20180822           1

num2cell(dstrcut.data)

ans = 

    [20180822]    [ 0]
    [20180822]    [ 1]
    [20180822]    [-1]
    [20180822]    [-1]
    [20180822]    [ 1]
    [20180822]    [ 1]
    [20180822]    [ 1]
    [20180822]    [ 1]

num2cell(dstrcut.data(:,1))

ans = 

    [20180822]
    [20180822]
    [20180822]
    [20180822]
    [20180822]
    [20180822]
    [20180822]
    [20180822]

num2cell(dstrcut.data(:,2))

ans = 

    [ 0]
    [ 1]
    [-1]
    [-1]
    [ 1]
    [ 1]
    [ 1]
    [ 1]

find(Position==1)
{Undefined function or variable 'Position'.
} 
Position
{Undefined function or variable 'Position'.
} 
num2cell(dstrcut.data(:,2))

ans = 

    [ 0]
    [ 1]
    [-1]
    [-1]
    [ 1]
    [ 1]
    [ 1]
    [ 1]

Position = num2cell(dstrcut.data(:,2));
find(Position==1)
{Undefined operator '==' for input arguments of type 'cell'.
} 
find(Position,1)
{Undefined function 'find' for input arguments of type 'cell'.
} 
dstrcut.data(:,2)

ans =

     0
     1
    -1
    -1
     1
     1
     1
     1

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
Position = dstrcut.data(:,2);
PositionCell = cell(length(Position),2)

PositionCell = 

    []    []
    []    []
    []    []
    []    []
    []    []
    []    []
    []    []
    []    []

PositionCell(Position==1) = {'多'};
PositionCell

PositionCell = 

     []    []
    '多'    []
     []    []
     []    []
    '多'    []
    '多'    []
    '多'    []
    '多'    []

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
Position = dstrcut.data(:,2);
PositionCell = cell(length(Position),2);
PositionCell(:,1) = dstrcut.textdata;
PositionCell(Position==1,2) = {'多'};
PositionCell(Position==-1,2) = {'空'};
PositionCell(Position==0,:) = [];
PositionCell

PositionCell = 

    'RB1901'    '多'
    'RU1901'    '空'
    'SR1901'    '空'
    'TA1901'    '多'
    'V1901'     '多'
    'Y1901'     '多'
    'ZN1810'    '多'

sortrows(PositionCell,1)

ans = 

    'RB1901'    '多'
    'RU1901'    '空'
    'SR1901'    '空'
    'TA1901'    '多'
    'V1901'     '多'
    'Y1901'     '多'
    'ZN1810'    '多'

help sortrows
 <strong>sortrows</strong> Sort rows in ascending order.
    Y = <strong>sortrows</strong>(X) sorts the rows of the matrix X in ascending order as a
    group. X is a 2-D numeric or char matrix. For a char matrix containing
    strings in each row, this is the familiar dictionary sort.  When X is
    complex, the elements are sorted by ABS(X). Complex matches are further
    sorted by ANGLE(X).  X can be any numeric or char class. Y is the same
    size and class as X.
 
    <strong>sortrows</strong>(X,COL) sorts the matrix based on the columns specified in the
    vector COL.  If an element of COL is positive, the corresponding column
    in X will be sorted in ascending order; if an element of COL is negative,
    the corresponding column in X will be sorted in descending order. For 
    example, <strong>sortrows</strong>(X,[2 -3]) sorts the rows of X first in ascending order 
    for the second column, and then by descending order for the third
    column.
 
    [Y,I] = <strong>sortrows</strong>(X) and [Y,I] = <strong>sortrows</strong>(X,COL) also returns an index 
    matrix I such that Y = X(I,:).
 
    Notes
    -----
    <strong>sortrows</strong> uses a stable version of quicksort.  NaN values are sorted
    as if they are higher than all other values, including +Inf.
 
    Class support for input X:
       numeric, logical, char
 
    See also <a href="matlab:help sort">sort</a>, <a href="matlab:help issorted">issorted</a>.

    <a href="matlab:matlab.internal.language.introspective.displayOverloads('sortrows')">Other functions named sortrows</a>

    Reference page in Help browser
       <a href="matlab:doc sortrows">doc sortrows</a>

sortrows(PositionCell,1)

ans = 

    'RB1901'    '多'
    'RU1901'    '空'
    'SR1901'    '空'
    'TA1901'    '多'
    'V1901'     '多'
    'Y1901'     '多'
    'ZN1810'    '多'

directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
Position = dstrcut.data(:,2);
PositionCell = cell(length(Position),2);
PositionCell(:,1) = dstrcut.textdata;
PositionCell(Position==1,2) = {'多'};
PositionCell(Position==-1,2) = {'空'};
PositionCell(Position==0,:) = [];
PositionCell = sortrows(PositionCell,1);
sizePositionCell = size(sizePositionCell)
{Undefined function or variable "sizePositionCell".
} 
directory2 = fp(1:pp(end-3));
directory2 = [directory2,'TB持仓\TB持仓情况*.csv'];
fileStruct = dir(directory2);
dstrcut = importdata(fileStruct.name);
Position = dstrcut.data(:,2);
PositionCell = cell(length(Position),2);
PositionCell(:,1) = dstrcut.textdata;
PositionCell(Position==1,2) = {'多'};
PositionCell(Position==-1,2) = {'空'};
PositionCell(Position==0,:) = [];
PositionCell = sortrows(PositionCell,1);
sizePositionCell = size(PositionCell);
sizePositionCell

sizePositionCell =

     7     2

if system_dependent('IsDebugMode')==1, dbquit; end
<a href="matlab: opentoline('C:\D\xyz\future\m\跟踪开仓-记录资金-图像识别-4\跟踪开仓\panel.m',3099,1)">3099 </a>1;
if system_dependent('IsDebugMode')==1, dbcont; end
